@startuml

class Mineral{
    -cantidad: int
}

class NodoMineral{
	-recolectorDeMineral: RecolectorDeMineral
	-cantidadDeMineralDisponible: int
	+NodoMineral(unaCantidadDeMineral)
	+construirRecolectorDeMineral(unRecolectorDeMineral)
	+recolectarMineralUsandoRecolectorDeMineral()
	+recolectarMineral(cantidadDeMineralParaExtraer)
}

interface RecolectorDeMineral{
	+recolectarMineralUsandoRecolectorDeMineral(unNodoMineral)
}

class NexoMineral{
	-estadoOperativo: EstadoOperativoNexoMineral
	-cantidadRecolectable: int
	+NexoMineral(unaVida, unEscudo, unTiempoDeConstruccion, unCostoMineral, unCostoGas, unaCantidadRecolectable)
	+setComportamientoUtilizable(nuevoEstadoOperativo)
	+avanzarTurno()
	+recolectarMineralUsandoRecolectorDeMineral(unNodoMineral)
}

interface EstadoOperativoNexoMineral{
    +recolectarMineral()
}

class NexoMineralUtilizable {
    -cantidadRecolectable: int
    +NexoMineralUtilziable(unaCantidadRecolectable)
    +recolectarMineral()
}

class NexoMineralNoUtilizable {
    +NexoMineralNoUtilziable()
    +recolectarMineral()
}

class Zangano{
    -cantidadRecolectableDeMineral: int
    +Zangano(unaCantidadRecolectable)
    +recolectarMineralUsandoRecolectorDeMineral(unNodoMineral)
}

NexoMineral --> EstadoOperativoNexoMineral
NexoMineralUtilizable ..up|> EstadoOperativoNexoMineral
NexoMineralNoUtilizable ..up|> EstadoOperativoNexoMineral

RecolectorDeMineral <|.. NexoMineral
RecolectorDeMineral <|.. Zangano

NodoMineral --> Mineral
NodoMineral --> RecolectorDeMineral

@enduml